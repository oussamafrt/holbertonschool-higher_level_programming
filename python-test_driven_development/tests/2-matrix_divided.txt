Test de la fonction ``matrix_divided`` en Python
======================

Cette fonction divise tous les éléments d'une matice
-------------------
>>> import math
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix_divided([[3, 9], [12, 15]], 3)
[[1.0, 3.0], [4.0, 5.0]]

>>> matrix_divided([[3, 9], [12, 15]], 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

>>> matrix_divided([[3, "9"], [12, 15]], 1)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[3, 9], [12, 15]], "1")
Traceback (most recent call last):
    ...
TypeError: div must be a number

>>> matrix_divided([[3], [12, 15]], 1)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[3, 9], [12, 15]], float(math.inf))
[[0.0, 0.0], [0.0, 0.0]]

>>> matrix_divided([[3, 9], [12, 15]])
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix_divided()
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'